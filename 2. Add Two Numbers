/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
   ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = new ListNode(0);
        ListNode* head = result;
        int carry = 0;
        bool cont1 = true, cont2 = true;
        while (cont1 || cont2) {
            result->val = (l1->val + l2->val + carry)%10;
            carry = (l1->val + l2->val + carry)/10;
            if(l1->next == NULL) { cont1 = false; l1->val = 0; } else { l1 = l1->next; }
            if(l2->next == NULL) { cont2 = false; l2->val = 0; } else { l2 = l2->next; }
            if (cont1 || cont2) { result->next = new ListNode(0); result = result->next; }
        }
        if(carry > 0) {result->next = new ListNode(carry); }
        return head;
    }
};
